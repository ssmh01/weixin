========================================缓存框架的定义==============================================
缓存框架用来对用户隐藏php各种缓存器(memcached, apc, eaccelerator, phpa, xcache)的差异,并增加一些
缓存器,使用户能够用统一的接口使用不能的缓存器.

========================================缓存框架的功能==============================================
1.支持两种缓存介质:内存-磁盘.
2.支持主流的缓存器(memcached, eaccelerator, xcache, apc)
3.内存介质类的缓存器都可以委托磁盘缓存器帮忙缓存,这样内存缓存区満后可以缓存到磁盘上.
4.缓存内容无关性,可以缓存多种内容,如对象/数组/字符串/数值
5.支持设置缓存过期时间,也可以手动更新缓存
6.缓存更新时间细粒度控制:
	->为所有的缓存内容设置通用的更新时间,低优先级
	->为不同缓存设置不同的更新时间, 高优先级
7.获取缓存信息.
	->缓存环境信息,如缓存能使用的内存是多少,已使用多少等.
	->缓存内容信息,如上次缓存时间,更新时间,缓存的类型等
8.支持异常
	
========================================缓存框架的初步设计==============================================
1.一个驱动器接口(CacheDriver),定义了缓存器核心功能,如初始化/添加缓存/更新缓存/删除缓存/清空缓存/获取缓存信息
2.一个代表缓存内容的类(CacheItem),定义了一个缓存内容包含的信息和操作.
3.一个事件类,定义了所有的事件类型和基本操作.
4.一个包装器,包装了缓存的所有功能,并提供事件支持.
6.一个异常类,定义了异常信息和操作.